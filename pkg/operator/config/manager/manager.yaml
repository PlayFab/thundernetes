apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager 
      labels:
        control-plane: controller-manager
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
        - command:
            - /manager
          args:
            - --leader-elect
          image: controller:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: API_SERVICE_SECURITY
              value: ${API_SERVICE_SECURITY}
            - name: THUNDERNETES_INIT_CONTAINER_IMAGE
              value: ${IMAGE_NAME_INIT_CONTAINER}:${IMAGE_TAG}
            - name: TLS_SECRET_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          name: manager
          securityContext:
            allowPrivilegeEscalation: false
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 500Mi
            limits:
              cpu: 100m
              memory: 500Mi
          ports:
            - containerPort: 5000
              hostPort: 5000
            - containerPort: 8080
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: controller-manager
spec:
  selector:
    control-plane: controller-manager
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: controller-manager-metrics-service
  namespace: system
spec:
  ports:
    - name: metrics
      port: 8080
      targetPort: 8080
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nodeagent
  namespace: system
spec:
  selector:
    matchLabels:
      name: nodeagent
  template:
    metadata:
      labels:
        name: nodeagent
    spec:
      serviceAccountName: nodeagent
      containers:
      - name: nodeagent
        image: ${IMAGE_NAME_NODE_AGENT}:${IMAGE_TAG}
        resources:
          limits:
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: 56001
          initialDelaySeconds: 3
          periodSeconds: 3
        ports:
        - name: nodeagentport
          containerPort: 56001
          hostPort: 56001
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_INTERNAL_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
